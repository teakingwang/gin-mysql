version: '3.8'  # 指定docker-compose文件格式的版本

networks:
  gin:
    external: true

services:
  db:
    image: postgres:latest
    container_name: gin-pg
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: user
    ports:
      - "5432:5432"
    volumes:
      - /Users/teaking/dbdata/postgres/data:/var/lib/postgresql/data
  # 定义数据库服务
#  gin-db:
#    image: mysql:latest  # 使用官方的mysql镜像
#    container_name: gin-mysql  # 容器的名称
#    environment:
#      MYSQL_ROOT_PASSWORD: 123456  # 设置MySQL的root密码
#      MYSQL_DATABASE: user  # 初始化一个名为user的数据库
#      MYSQL_USER: user  # 创建一个名为user的用户
#      MYSQL_PASSWORD: 123456  # 设置user用户的密码
#    volumes:
#      - /Users/teaking/dbdata/mysql:/var/lib/mysql  # 使用名为db_data的卷来存储数据库数据
#    networks:
#      - gin  # 连接到指定的网络
#    ports:
#      - 3306:3306

#  gin-mysql:  # 服务的名称，你可以根据需要更改
#    restart: always
#    build:  # 构建服务的指令
#      context: .  # 指定构建上下文为当前目录
#      dockerfile: Dockerfile  # 指定 Dockerfile 的名称
#    environment:
#      TZ: Asia/Shanghai
#    ports:
#      - "8080:8080"  # 将容器的 8080 端口映射到主机的 8080 端口（根据你的应用实际监听的端口进行修改）
##    depends_on:  # 指定服务启动的依赖关系
##      - gin-db  # 如果你的应用需要连接数据库，可以添加数据库服务作为依赖
#    command: /app/gin-mysql -c ./resources/config.yaml